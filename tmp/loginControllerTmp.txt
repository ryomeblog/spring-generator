package ${project_path}.controller.login;

import static ${project_path}.common.CommonUtils.*;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import ${project_path}.constant.ResultCode;
import ${project_path}.controller.BaseController;
import ${project_path}.dto.generator.${auth_tblname};
import ${project_path}.request.login.LoginRequest;
import ${project_path}.response.ApiResponseOptional;
import ${project_path}.response.login.LoginResponse;
import ${project_path}.service.login.LoginService;

@RestController
public class LoginController extends BaseController {

    /** ログインサービス */
    @Autowired
    private LoginService loginService;

    @PostMapping("/user/login")
    public ApiResponseOptional<LoginResponse> login(
            @RequestBody @Validated LoginRequest body, BindingResult bindingResult,
            HttpServletRequest request, HttpServletResponse response) {
        // バリデーションチェック
        valid(bindingResult);

        // ログイン処理
        ${auth_tblname} user = loginService.login(body.getUserId(), body.getPassword());

        // レスポンス返却
        return new ApiResponseOptional<>(ResultCode.C000, toLoginResponse(user));
    }

    LoginResponse toLoginResponse(${auth_tblname} user) {
        // レスポンス作成
        return new LoginResponse(
                user.get${upper_username_column}(),
                getRole(user.get${upper_authority_column}()),
                user.getVersion());
    }
}
